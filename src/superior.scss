// =======================
// ===== DEFINE VARS =====
// =======================
$superior-cols: 12 !default;
$superior-gutter: 1rem !default;



// Returns percentage of span to cols
@function span($span, $cols: $superior-cols) {
  @return percentage($span / $cols);
}


// =======================
// ==== DEFINE MIXINS ====
// =======================

// Column wrapper/parent
// aka row
@mixin cols($flex: flex, $dir: row, $wrap: wrap, $justify: flex-start, $align-items: flex-start) {
  margin: 0 $superior-gutter / -2;

  @if $flex == false {

    @include clearfix;

  } @else {

    display: $flex;
    flex-direction: $dir;
    flex-wrap: $wrap;
    justify-content: $justify;
    align-items: $align-items;

  }
}

// caculate percentage flex needs to span
@mixin update-flex($span, $cols: $superior-cols) {
  flex: 0 1 span($span, $cols);
  max-width: span($span, $cols);
}

// calculate span for float or flex
// add padding/box sizing to account for gutters
@mixin make-span($span, $cols: $superior-cols, $flex: false) {
  @if $flex == true {
    @include update-flex($span, $cols);
  } @else {
    width: span($span, $cols);
  }
  padding: 0 $superior-gutter / 2;
  box-sizing: border-box;
}

// make a flexbox column
// accepts order param
@mixin make-flex($span, $cols: $superior-cols, $order: null) {
  @include make-span($span, $cols, true);

  @if $order {
    order: $order;
  }
}

// make a flexbox column
@mixin make-float($span, $cols: $superior-cols, $float: left) {
  @include make-span($span, $cols);
  float: $float;
}

// *New*
// Output class names for each column
@mixin make-classes($flex: true) {
  @for $i from 1 through $superior-cols {

    .col-#{$i} {
      @if $flex == true {
        @include make-flex($i);
      } @else {
        @include make-float($i)
      }
    }

  }
}


// =======================
// ====== UTILITIES ======
// =======================
@mixin offset($span, $direction: left, $cols: $superior-cols) {
  margin-#{$direction}: span($span, $cols);
}

@mixin push($i, $cols: $superior-cols) {
  position: relative;
  left: percentage($i / $cols);
}

@mixin pull($i, $cols: $superior-cols) {
  position: relative;
  right: percentage($i / $cols);
}

// clear floats... included by default
// in makeFloat()
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
	}
}


// MIT License
//
// Copyright (c) 2017 Brett Smith
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
